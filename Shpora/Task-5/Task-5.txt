Всегда следи за границами начальных значений!
1. Если по условию n натуральное
    range(1, 10_000)
2. Если по условию n неотрицательное
    range(0, 10_000)
3. Если по условию n > 10
    range(11, 10_000)

========================================================================================================

Стандартные функции:
1. Представление числа N в двоичной системе
    bin(N)[2:] или f'{N:b}'
2. Представление числа N в восьмеричной системе
    oct(N)[2:] или f'{N:o}'
3. Представление числа N в шестнадцатеричной системе
    hex(N)[2:] или f'{N:x}'
4. Перевод числа N (в формате строки) в 10 из sys системы счисления
    int(N, sys)

Функция для перевода (2 ≤ sys ≤ 36)
from string import digits, ascii_lowercase
def convert(num, sys):
   alph = digits + ascii_lowercase
   res = ''
   while num:
       res += alph[num % sys]
       num //= sys
   return res[::-1]

==============================================================================================================

Куда могут попросить приписать?
1: Приписать справа '1'
    R = R + '1'
2: Приписать слева '1'
    R = '1' + R
3. Заменить первые два символа на '00'
    R = '00' + R[2:]
4.Заменить последние два символа на '00'
    R = R[:-2] + '00'
5.Приписать в середину числа '1'
    R = R[:len(R) // 2] + '1' + R[len(R) // 2:]

==================================================================================================================

1. Сумма цифр строки R в двоичной системе
    R.count('1')
2. Сумма цифр строки R
    sum(map(int, R))
3. Количество четных цифр
    R = hex(15623)[2:]
    sum([1 for i in R if int(i, 16) % 2 == 0])